+++
date = "2016-04-21"
!outline = "en_1"
!outline_level = 3
!top = ""
!mark = ""
tags = [
    "LT0049"
]
!template = md2.template
!domain = ""
+++


- LT0049 (name=Group Anagrams, ptag=Leetcode) @TAG(Term, Medium-OJ)
    - [Group Anagrams - Leetcode](https://leetcode.com/problems/group-anagrams/) @TAG(LT0049)

    Given an array of strings, group anagrams together.

    For example, given:
    `["eat", "tea", "tan", "ate", "nat", "bat"]` ,

    Return:

        [
          ["ate", "eat","tea"],
          ["nat","tan"],
          ["bat"]
        ]

    **Note:**

    1. For the return value, each
    *inner* list's elements must follow the lexicographic order.
    1. All inputs will be in lower-case.


- Better solution learn from other people @TAG(LT0049)

    - std::sort(a,b)  ==> 可以不加比较算子
    - unordered_map   ==> 不用判断是否含有 pair, 直接 map[k].push_back(s)


**Main Code:**

	class Solution {
	public:
	    vector<vector<string>> groupAnagrams(vector<string>& strs) 
	    {
	        unordered_map<string, vector<string>> groupMap;
	        for( auto s : strs)
	        {
	            string k = s;
	            std::sort(k.begin(), k.end());
	            groupMap[k].push_back(s);
	        }
	        
	        vector<vector<string>> res;
	        for( auto pm : groupMap )
	        {
	            vector<string>& group = (pm).second;
	            std::sort( group.begin(), group.end());
	            res.push_back(group);
	        }     
	        return res;
	    }
	};