+++
date = "2016-05-07"
!outline = "en_1"
!outline_level = 3
!top = ""
!mark = ""
tags = [
    "LT0278"
]
!template = md2.template
!domain = ""
+++


- LT0278 (name=First Bad Version, ptag=Leetcode) @TAG(Term, Easy-OJ)
    - [First Bad Version - Leetcode](https://leetcode.com/problems/first-bad-version/ ) @TAG(LT0278)

    You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.

    Suppose you have
    `n` versions
    `[1, 2, ..., n]` and you want to find out the first bad one, which causes all the following ones to be bad.

    You are given an API
    `bool isBadVersion(version)` which will return whether
    `version` is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.